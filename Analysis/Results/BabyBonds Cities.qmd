---
#title: "Baby Bonds: Results for {{< meta params.city >}}"
title: "Baby Bonds: Results for `r params$city`"
date: today
date-format: long
format: 
  html:
    embed-resources: true
execute: 
  echo: false
  warning: false
fig-cap-location: top
toc: true
toc-expand: true
params:
    city: "USA"
---


```{r}
library(Hmisc)
library(tidyverse)
library(writexl)
library(urbnthemes)
set_urbn_defaults(style = "print", 
                  base_size=11,
                  base_line_size = 1
                  )

microdf = read_csv("X:/programs/Run1006(babybonds)/BabyBonds/BabyBondsData23Aug24.csv") |>
    rename_all(tolower)

wealthdf = read_csv("X:/programs/Run1006(babybonds)/BabyBonds/WealthData23Aug24.csv") |>
    rename_all(tolower) |>
    filter(year>=2041)

if( params$city != "USA" ) {

    wtdf = read_csv(paste0(here::here(), "/data/DYNASIM/city_weights.csv")) |>
        filter(city==params$city) |>
        select(pernum, weight)

    microdf = microdf |>
        select(-weight) |>
        left_join(
            wtdf,
            by="pernum"
        )
    
    wealthdf = wealthdf |>
        left_join(
            wtdf,
            by="pernum"
        )
} else {
    wealthdf = wealthdf |>
        left_join(
            microdf |> filter(age==0) |> select(pernum, weight, scenario),
            by=c("pernum", "scenario")
        )
}

# Output: chart data
chartfname = paste0(here::here(), "/Analysis/Results/Chart-Data-", params$city, ".xlsx")
chartdfs = list()
```

```{r}
#| label: calculate-quintiles

qtiles = seq(.2,.8,.2)
lhiqdf = microdf |>
    filter(age==0) |>
    dplyr::reframe(
        lhiq = wtd.quantile(lhinc, weight, probs=qtiles), 
        q=qtiles*100,
        .by=scenario) |>
    pivot_wider(id_cols=scenario, names_from=q, values_from = lhiq, names_prefix="lhiq")
    
microdf = left_join(
    microdf |> select(-paste0("lhi", c(50, seq(20,80,20)))),
    lhiqdf,
    by="scenario"
) |>
    mutate(
        lhinc0quin = case_when(
            lhinc<=lhiq20 ~ 1,
            lhinc<=lhiq40 ~ 2,
            lhinc<=lhiq60 ~ 3,
            lhinc<=lhiq80 ~ 4,
            TRUE ~ 5
        )
    )

```


```{r}
#| label: filter-by-race

microdf  = filter(microdf,  raceeth <= 3)
wealthdf = filter(wealthdf, raceeth <= 3)

```


```{r}
#| label: functions

plot_by_scen = function(data, 
                            var, 
                            var_lab, 
                            class1, 
                            class1_lab, 
                            facet=NULL,
                            scale=1, 
                            title=NULL, 
                            dodgewidth=1, 
                            hjust=1,
                            val_lab_digits=0
                            )
{
    names(palette_urbn_main) = NULL

    p = data |> 
        ggplot(aes(x={{class1}}, y={{var}})) +
        geom_col(aes(fill=scenario), position=position_dodge())
        if(!is.null(facet)) {
            p = p + facet_wrap(facet)
        }
    p = p + scale_y_continuous(labels=function(x) x*scale) +
        xlab(class1_lab) + ylab(var_lab)
    if(!is.null(title)) {
        p = p + ggtitle(title)
    }
    p = p + 
        scale_fill_manual(values=palette_urbn_main) +
        scale_color_manual(values=c("white", "black")) +
        coord_flip() +
        geom_text(
            aes(label=round({{var}}*scale, val_lab_digits), color=scenario), 
            position=position_dodge(width=dodgewidth), 
            hjust=hjust, 
            show.legend = FALSE
            )
    return(p)
}


recode_raceeth = function(data)
{
    return(data |> mutate(raceeth = case_when(
               raceeth==1 ~ "Black",
               raceeth==2 ~ "Hispanic",
               raceeth==3 ~ "White",
               TRUE ~ "Other"
           )
        )
    )
}

recode_quintile = function(data, var)
{
    return(data |> mutate(
        {{var}} := case_when(
            {{var}}==1 ~ "1st",
            {{var}}==2 ~ "2nd",
            {{var}}==3 ~ "3rd",
            {{var}}==4 ~ "4th",
            {{var}}==5 ~ "5th"
        )
    )
    )
}

recode_scenario = function(data)
{
    return(
        data |> mutate(
            scenario = factor(scenario, ordered=TRUE, labels=c("Baseline", "Baby Bonds"))
        )
    )
}

recode_male = function(data)
{
    return(
        data |> mutate(
            male = factor(male, ordered=TRUE, labels=c("Women", "Men"))
        )
    )
}

recode_degree = function(data)
{
    return(
        data |> mutate(
            degree = factor(
                degree,
                ordered=TRUE,
                labels=c(
                    "Less than high-school",
                    "High-school diploma",
                    "Some college",
                    "College degree",
                    "Graduate degree"
                )
            )
        )
    )
}
```


# Results at Age 18

## The Average Baby-Bonds Amount

```{r}
bbavg = microdf |>
    filter(age==18, scenario==1) |>
    select(weight, bbonds) |>
    summarise(bbonds=weighted.mean(bbonds, weight)) |>
    pull() |> round()
```

The average amount of baby bonds for 18-year-olds born in 2024-2028 is `{r} paste0('$', format(bbavg, big.mark=","))`.

## The Average Baby-Bonds Amount by Race/Ethnicity

```{r}
#| label: fig-babybonds-by-race-18
#| fig-cap: "Average amount of baby bonds by race/ethnicity"

df = microdf |>
    filter(age==18, scenario==1) |>
    select(raceeth, weight, bbonds) |>
    group_by(raceeth) |>
    summarise(bbonds=weighted.mean(bbonds, weight)) |>
    recode_raceeth()

df |> ggplot(aes(x=raceeth, y=bbonds)) +
    geom_col(position=position_dodge()) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Race/ethnicity") + ylab("Baby bonds (1000s of $2023)") +
    ggtitle("People age 18 born in 2024-2028") +
    geom_text(
        aes(label=round(bbonds/1000)), 
        color="white", 
        vjust=1, 
        size=4,
        show.legend = FALSE
        )

df = df |>
    mutate(bbonds = round(bbonds/1000))

chartdfs = c(chartdfs, list("Figure 1"=df))
```


## Baby Bonds Amount by Quintile of Family Income at Birth and Race/Ethnicity

```{r}
#| label: fig-babybonds-by-race-lhincquin-18
#| fig-cap: "Baby bonds by race/ethnicity and quintile of family income at birth"

df = microdf |>
    filter(age==18, scenario==1) |>
    select(lhinc0quin, raceeth, weight, bbonds) |>
    group_by(raceeth, lhinc0quin) |>
    summarise(bbonds=weighted.mean(bbonds, weight)) |>
    recode_raceeth() |>
    recode_quintile(lhinc0quin)

df |> ggplot() +
    geom_col(aes(x=lhinc0quin, y=bbonds, fill=raceeth), position=position_dodge()) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Quintile of family income at birth") + ylab("Baby bonds (1000s of $2023)") +
    ggtitle("People age 18 born in 2024-2028") +
    scale_color_manual(values=c("white", "black", "white")) +
    geom_text(
        aes(x=lhinc0quin, y=bbonds, group=raceeth, color=raceeth, label=round(bbonds/1000)), 
        size=3,
        position=position_dodge(width=.7),
        vjust=1,
        show.legend = FALSE
        )

df = df |> 
    mutate(bbonds = round(bbonds/1000)) |>
    pivot_wider(id_cols = lhinc0quin, names_from=raceeth, values_from = bbonds)
chartdfs = c(chartdfs, list("Figure 2"=df))

```

## Family Liquid Wealth by Race/Ethnicity (Restricted to dependent 18-year-olds)

```{r}
#| label: fig-liqwealth-by-race-dep18
#| fig-cap: "Family liquid wealth by race/ethnicity for dependent 18-year-olds"

df = wealthdf |>
    filter(yhead==0) |>
    select(raceeth, fam_liq_wealth, scenario, weight) |>
    group_by(raceeth, scenario) |>
    summarise(
        fin_wealth_avg = weighted.mean(         fam_liq_wealth, weight),
        fin_wealth_med = Hmisc::wtd.quantile(   fam_liq_wealth, weight, probs=.5)
        ) |>
    recode_raceeth() |>
    recode_scenario() |>
    pivot_longer(
        cols=c(fin_wealth_avg, fin_wealth_med), 
        names_prefix="fin_wealth_", 
        names_to="Statistic", 
        values_to="fin_wealth"
        ) |>
    mutate(Statistic=if_else(Statistic=="avg", "Mean", "Median"))
    
plot_by_scen(
    df,
    var=fin_wealth, 
    var_lab="Family liquid wealth (thousands of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~Statistic,
    scale=1e-3,
    title="Families of people born in 2024-2028 at age 18"
    )

df = df |> 
    mutate(fin_wealth = round(fin_wealth/1000)) |>
    pivot_wider(id_cols = c(Statistic, raceeth), names_from=scenario, values_from = fin_wealth) |> arrange(Statistic)
chartdfs = c(chartdfs, list("Figure 3"=df))

```


## Family Financial Wealth Including Retirement Savings by Race/Ethnicity (Restricted to dependent 18-year-olds)

```{r}
#| label: fig-finwealth-by-race-dep18
#| fig-cap: "Family financial wealth by race/ethnicity for dependent 18-year-olds"

df = wealthdf |>
    filter(yhead==0) |>
    select(raceeth, fam_fin_wealth, scenario, weight) |>
    group_by(raceeth, scenario) |>
    summarise(
        fin_wealth_avg=weighted.mean(fam_fin_wealth, weight),
        fin_wealth_med=Hmisc::wtd.quantile(fam_fin_wealth, weight, probs=.5)
        ) |>
    recode_raceeth() |>
    recode_scenario() |>
    pivot_longer(
        cols=c(fin_wealth_avg, fin_wealth_med), 
        names_prefix="fin_wealth_", 
        names_to="Statistic", 
        values_to="fin_wealth"
        ) |>
    mutate(Statistic=if_else(Statistic=="avg", "Mean", "Median"))
    
plot_by_scen(
    df,
    var=fin_wealth, 
    var_lab="Family financial wealth (thousands of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~Statistic,
    scale=1e-3,
    title="Families of people born in 2024-2028 at age 18"
    )

df = df |> 
    mutate(fin_wealth = round(fin_wealth/1000)) |>
    pivot_wider(id_cols = c(Statistic, raceeth), names_from=scenario, values_from = fin_wealth) |> arrange(Statistic)
chartdfs = c(chartdfs, list("Figure 4"=df))

```


## Family Financial Wealth Including Retirement Savings by Family Income at Birth (Restricted to dependent 18-year-olds)

```{r}
#| label: fig-finwealth-by-lhincquin-dep18
#| fig-cap: "Family financial wealth by family income at birth for dependent 18-year-olds"

df = wealthdf |>
    inner_join(
        microdf |> filter(age==18) |> select(pernum, scenario, lhinc0quin),
        by=c("pernum", "scenario")
        ) |>
    filter(yhead==0) |>
    select(lhinc0quin, fam_fin_wealth, scenario, weight) |>
    group_by(lhinc0quin, scenario) |>
    summarise(
        fin_wealth_avg=wtd.mean(fam_fin_wealth, weight),
        fin_wealth_med=wtd.quantile(fam_fin_wealth, weight, probs=.5)
        ) |>
    recode_quintile(lhinc0quin) |>
    recode_scenario() |>
    pivot_longer(
        cols=c(fin_wealth_avg, fin_wealth_med), 
        names_prefix="fin_wealth_", 
        names_to="Statistic", 
        values_to="fin_wealth"
        ) |>
    mutate(Statistic=if_else(Statistic=="avg", "Mean", "Median"))
    
plot_by_scen(
    df,
    var=fin_wealth, 
    var_lab="Family financial wealth (thousands of $2023)",
    class1=lhinc0quin,
    class1_lab="Quintile of family income at birth",
    facet=~Statistic,
    scale=1e-3,
    title="Families of people born in 2024-2028 at age 18"
    )

df = df |> 
    mutate(fin_wealth = round(fin_wealth/1000)) |>
    pivot_wider(id_cols = c(Statistic, lhinc0quin), names_from=scenario, values_from = fin_wealth) |> arrange(Statistic)
chartdfs = c(chartdfs, list("Figure 5"=df))

```

# Results at Age 45

## Share of People with College Degree by Race/Ethnicity

```{r}
#| label: fig-coldeg-share-by-race-45
#| fig-cap: "Share of people with college degree by race/ethnicity"

df = microdf |>
    filter(age==45) |>
    select(raceeth, scenario, weight, ed_coldeg) |>
    group_by(raceeth, scenario) |>
    summarise(ed_coldeg=weighted.mean(ed_coldeg, weight)) |>
    recode_raceeth() |>
    recode_scenario()


plot_by_scen(
    df,
    var=ed_coldeg, 
    var_lab="Share with college degree (%)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    scale=1e2,
    title="People age 45 born in 2024-2028"
    )

df = df |> 
    mutate(ed_coldeg = round(ed_coldeg*100)) |>
    pivot_wider(id_cols = raceeth, names_from=scenario, values_from = ed_coldeg)
chartdfs = c(chartdfs, list("Figure 6"=df))
    
```



## Share of People who Took a Student Loan by Race/Ethnicity and Sex

```{r}
#| label: fig-share-stdebt-by-race-sex-45

df = microdf |>
    filter(age==45, degree>=3) |>
    select(raceeth, male, scenario, weight, studdebt) |>
    mutate(hasdebt=(studdebt>0)) |>
    group_by(raceeth, male, scenario) |>
    summarise(hasdebt=weighted.mean(hasdebt, weight)) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen(
    df,
    var=hasdebt, 
    var_lab="Share with student loan debt (%)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~male,
    scale=1e2,
    title="People age 45 born in 2024-2028 who attended college"
    )

df = df |> 
    mutate(hasdebt = round(hasdebt*100)) |>
    pivot_wider(id_cols = c(male, raceeth), names_from=scenario, values_from = hasdebt) |>
    arrange(desc(male))
chartdfs = c(chartdfs, list("Figure 7"=df))

```


## Average Student Loan Debt at College Exit among College Attendees by Race/Ethnicity and Sex

```{r}
#| label: fig-avg-stdebt-by-race-sex-45
#| fig-cap: "Average Student Loan Debt by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45, degree>=3) |>
    select(raceeth, male, scenario, weight, studdebt) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        debt_avg = wtd.mean(studdebt, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen(
    df,
    var=debt_avg, 
    var_lab="Student loan debt (1000s of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~male,
    scale=1e-3,
    title="People age 45 born in 2024-2028 who attended college"
    )

df = df |> 
    mutate(debt_avg = round(debt_avg/1000)) |>
    pivot_wider(id_cols = c(male, raceeth), names_from=scenario, values_from = debt_avg) |>
    arrange(desc(male))
chartdfs = c(chartdfs, list("Figure 8"=df))
```

## Average Student Loan Debt at College Exit among College Attendees by Race/Ethnicity and Family Income at Birth

```{r}
#| label: fig-avg-stdebt-by-race-lhincquin-45
#| fig-cap: "Average Student Loan Debt by Race/Ethnicity and Family Income at Birth"

df = microdf |>
    filter(age==45, degree>=3) |>
    select(raceeth, lhinc0quin, scenario, weight, studdebt) |>
    group_by(raceeth, lhinc0quin, scenario) |>
    summarise(
        debt_avg = wtd.mean(studdebt, weight)
        ) |>
    ungroup() |>
    recode_quintile(lhinc0quin) |>
    recode_raceeth() |>
    recode_scenario()


plot_by_scen(
    df,
    var=debt_avg, 
    var_lab="Student loan debt (1000s of $2023)",
    class1=lhinc0quin,
    class1_lab="Quintile of family income at birth",
    facet=~raceeth,
    scale=1e-3,
    title="People age 45 born in 2024-2028 who attended college"
    )

df = df |> 
    mutate(debt_avg = round(debt_avg/1000))
chartdfs = c(chartdfs, list("Figure 9"=df))
```


## Homeownership by Race/Ethnicity and Sex

```{r}
#| label: fig-homeown-by-race-sex-45
#| fig-cap: "Homeownership by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45) |>
    select(raceeth, male, scenario, weight, ownhome) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        ownhome = weighted.mean(ownhome, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen(
    df,
    var=ownhome, 
    var_lab="Homeownership rate(%)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~male,
    scale=100,
    title="People age 45 born in 2024-2028",
    dodgewidth=.5
    )

df = df |> 
    mutate(ownhome = round(ownhome*100)) |>
    pivot_wider(id_cols = c(male, raceeth), names_from=scenario, values_from = ownhome) |>
    arrange(desc(male))
chartdfs = c(chartdfs, list("Figure 10"=df))
```

## Median Home Equity by Race/Ethnicity and Sex

```{r}
#| label: fig-med-homeeq-by-race-sex-45
#| fig-cap: "Median Home Equity by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45 & ownhome==1) |>
    select(raceeth, male, scenario, weight, homeeq) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        homeeq_avg = wtd.mean(homeeq, weight),
        homeeq_med = wtd.quantile(homeeq, weight, probs=.5)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen(
    df,
    var=homeeq_med, 
    var_lab="Home equity(1000s of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~male,
    scale=1e-3,
    title="Homeowners age 45 born in 2024-2028",
    dodgewidth=.5
    )

df = df |> 
    mutate(homeeq_med = round(homeeq_med/1000)) |>
    pivot_wider(id_cols = c(male, raceeth), names_from=scenario, values_from = homeeq_med) |>
    arrange(desc(male))
chartdfs = c(chartdfs, list("Figure 11"=df))
```

# Results at Age 65

## Average Per-Capita Retirement at 65 Savings by Family Income at Birth and Sex

```{r}
#| label: fig-avg-retbal-by-lhincquin-sex-65
#| fig-cap: "Average Retirement Account Balance at 65 by Family Income at Birth and Sex"

df = microdf |>
    filter(age==65) |>
    select(lhinc0quin, male, scenario, weight, retbal) |>
    group_by(lhinc0quin, male, scenario) |>
    summarise(
        retbal_avg = wtd.mean(retbal, weight),
        retbal_med = wtd.quantile(retbal, weight,probs=.5)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_quintile(lhinc0quin) |>
    recode_scenario()

plot_by_scen(
    df,
    var=retbal_avg, 
    var_lab="Retirement savings (1000s of $2023)",
    class1=lhinc0quin,
    class1_lab="Quintile of family income at birth",
    facet=~male,
    scale=1e-3,
    title="People age 65 born in 2024-2028",
    dodgewidth=.5
    )

df = df |> 
    mutate(across(where(is.double), \(x) round(x/1000)))
chartdfs = c(chartdfs, list("Figure 12"=df))
```

## Median Per-Capita Retirement at 65 Savings by Race and Sex

```{r}
#| label: fig-med-retbal-by-race-sex-65
#| fig-cap: "Median Retirement Account Balance at 65 by Race and Sex"

df = microdf |>
    filter(age==65) |>
    select(raceeth, male, scenario, weight, retbal) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        retbal_avg = wtd.mean(retbal, weight),
        retbal_med = wtd.quantile(retbal, weight, probs=.5)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen(
    df,
    var=retbal_med, 
    var_lab="Retirement savings (1000s of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    facet=~male,
    scale=1e-3,
    title="People age 65 born in 2024-2028",
    dodgewidth=.5
    )

df = df |> 
    mutate(retbal_med = round(retbal_med/1000)) |>
    pivot_wider(id_cols = c(male, raceeth), names_from=scenario, values_from = retbal_med) |>
    arrange(desc(male))
chartdfs = c(chartdfs, list("Figure 13"=df))

```

```{r}

write_xlsx(chartdfs, chartfname)
```
