---
title: "NLSY Parent Income and Wealth Imputation"
format:
  html:
    embed-resources: true
editor: visual
execute: 
  echo: false
  warning: false
fig-cap-location: top
toc: true
toc-expand: true
---

## Data Summary

```{r}
#Packages
librarian::shelf(dplyr, mice, car, corrplot, caret, tidyr, modelsummary)
source(here::here("NLSY/nlsy_lib.R"))

```

```{r}

basedf = nlsy_get_base_df()

# Making dummy or factor variables
test <- basedf |>
    mutate(
        mom_educ_hs = nlsy_encode_educ5(mom_res_ed, factorize=TRUE),
        dad_educ_hs = nlsy_encode_educ5(dad_res_ed, factorize=TRUE),
        race_eth = nlsy_recode_race_and_eth10(race, hisp),
        race_eth = factor(race_eth),
        race = factor(race),
        hisp = factor(hisp),
        par_dec = ifelse(par1_deceased == "Yes" | par2_deceased == "Yes", 1, 0) # Either parent deceased
    ) |>
    filter(!is.na(race_eth))
    
```

```{r}
#| label: tbl-data-summary-contvar
#| tbl-cap: "Data summary, continuous variables"

test |>
  select(age_resp, bdate_y, pincome, pnetworth, retsav1, mom_age_birth, 
         mom_age, has_retsav, owns_home, both_parents) |>
  datasummary_skim()
```

```{r}
#| label: tbl-data-summary-catvar
#| tbl-cap: "Data summary, categorical variables"

test |>
  select(mom_educ_hs, dad_educ_hs, race_eth) |>
  datasummary_skim(type="categorical")

```

```{r}
#| label: tbl-reg-pincome
#| tbl-cap: "Regression of pincome to examine significance of predictors"

# Looking for significance with non-missing income and wealth
non_missing <- test %>%
    filter(!is.na(pincome),
           !is.na(pnetworth))

m1 = lm(pincome ~ mom_age + race_eth + mom_educ_hs + dad_educ_hs + 
    has_retsav + owns_home + both_parents + par_dec, 
    data = non_missing)

m2 = lm(pnetworth ~ mom_age + race_eth + mom_educ_hs + dad_educ_hs + 
    has_retsav + owns_home + both_parents + par_dec, 
    data = non_missing)

modelsummary(list(m1, m2),
             estimate="{estimate}{stars}", 
             statistic=NULL,
             stars=c('*'=.1, '**'=.05, '***'=.01)
             )
#Non-significant: par_dec - dropping for now
```

### Checking for multi-collinearity - correlation plot for numeric variables

```{r}

testing_cor <- test |>
    select(age_resp, mom_age, has_retsav, owns_home, both_parents) |>
    drop_na()

M <- cor(testing_cor)
cor(testing_cor)
corrplot(M, type = "upper")
```

### Checking for multi-collinearity - VIF and Successive addition of regressors

```{r}
#| eval: false

summary(model <- lm(pincome ~ mom_age, data = test)) #Adj R2 = 0.057
summary(model <- lm(pincome ~ mom_age + hisp, data = test)) #Adj R2 = 0.09
car::vif(model)
summary(model <- lm(pincome ~ mom_age + hisp + race, data = test)) # #Adj R2 = 0.157
car::vif(model)

summary(model <- lm(pincome ~ mom_age + hisp + race + mom_educ_hs, data = test)) #Adj R2 = 0.1899
car::vif(model)

summary(model <- lm(pincome ~ mom_age + hisp + race + mom_educ_hs + dad_educ_hs, data = test)) #Adj R2 = 0.1616
car::vif(model)

summary(model <- lm(pincome ~ mom_age + hisp + race + mom_educ_hs + dad_educ_hs + has_retsav, data = test)) #Adj R2 = 0.199
car::vif(model)

summary(model <- lm(pincome ~ mom_age + hisp + race + mom_educ_hs + dad_educ_hs + has_retsav + owns_home, data = test)) #Adj R2 = 0.2107
car::vif(model)

summary(model <- lm(pincome ~ mom_age + hisp + race + mom_educ_hs + dad_educ_hs + has_retsav + owns_home + both_parents, data = test)) #Adj R2 = 0.2108
car::vif(model)
```

## Checking for missings in the predictor variables

```{r}

impute <- test |>
    select(
        id, pincome, pnetworth, mom_age, mom_educ_hs, dad_educ_hs, 
        race_eth, has_retsav, owns_home, both_parents
    )

# no variables are found to have near zero variance
t <- nearZeroVar(impute) 

# dad_educ_hs has 3433 missings
sapply(impute, function(x) sum(is.na(x))) 

# Calculating percent of usable cases
m <- md.pairs(impute)

# looking for low proportions: where both target and predictor are missing on the same cases
# Note: For row target pincome and pnetworth respectively, predictors dad_educ_hs, has_retsav, 
# and owns_home have lowest proportions
round(m$mr/(m$mr + m$mm), 3) 


```

## Multiple Imputation

```{r}
# Paper that uses multiple imputation: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6049093/
# Multiple imputation in R reference: https://library.virginia.edu/data/articles/getting-started-with-multiple-imputation-in-r
init = mice(impute, maxit=5)
meth = init$method
predM = init$predictorMatrix

# Set distributions
num <- c("mom_age") # numerical variables
log <- c("has_retsav", "owns_home", "both_parents") # binary variables
poly <- c("mom_educ_hs") # ordered categorical variables
poly2 <- c("race", "race_eth")# Unordered categorical variable

# Assign Variables to be imputed
# Don't use id as a predictor variable
predM[,c("id")] <- 0
# Use race_eth as predictor for all imputations
predM[,c("race_eth")] <- 1
```

```{r}
#| label: tbl-imputation-methods
#| tbl-cap: "Imputation-methods vector"

# Imputation methods
knitr::kable(meth)
```

```{r}
#| label: tbl-imput-predictor-matrix
#| tbl-cap: "Imputation predictor matrix"

# Imputation predictors
knitr::kable(predM)
```

```{r}
# Income and Wealth imputation
set.seed(25)
imputed = mice(impute, method=meth, predictorMatrix=predM, m=5)

imputed <- complete(imputed, action = "repeated", include = FALSE)

final <- imputed %>%
    rename(id = id.1,
           race_eth = race_eth.1) %>%
    select(-starts_with("id."), -starts_with("race_eth"))
```

```{r}
# Join back with original income and wealth
og_values <- impute %>%
    select(id, pincome, pnetworth, race_eth, dad_educ_hs)

final <- merge(x=final,y=og_values,
                    by="id", all.x=TRUE)

income <- final %>%
    select(id, starts_with("pincome"))
wealth <- final %>%
    select(id, starts_with("pnetworth"))

pincome <- tidyr::gather(income, key = "imputation", value ="pincome", matches("pincome"), -id)
pnetworth <- tidyr::gather(wealth, key = "imputation", value ="pnetworth", matches("pnetworth"), -id)

```

## Distribution Plots for Parent Income (non-imputed and imputed)

```{r}
ggplot(pincome, aes(x=pincome, fill= imputation)) +
    geom_density(alpha = 0.5) +
    facet_wrap(~imputation, scales="free")
```

## Distribution Plots for Parent Wealth (non-imputed and imputed)

```{r}
ggplot(pnetworth, aes(x=pnetworth, fill= imputation)) +
    geom_density(alpha = 0.5) +
    facet_wrap(~imputation, scales="free")
```

## Distribution Plots for Dad Education (non-imputed and imputed)

```{r}
#| label: tbl-dad-educ-missing
#| tbl-cap: "Total number of observations and number of missing values of father's education by race and ethnicity"

dad_educ <- final %>%
    select(id, starts_with("dad_")) |>
    tidyr::gather(key = "imputation", value ="dad_educ", matches("dad_educ"), -id) |>
    mutate(dad_educ = factor(dad_educ, levels=nlsy_get_educ5_levels())) |>
    mutate(imputation = if_else(imputation=="dad_educ_hs", "0", imputation),
           imputation = gsub("dad_educ_hs.", "", imputation))

dad_ed_miss = dad_educ |>
    filter(imputation=="0") |>
    select(-imputation) |>
    left_join(select(test, id, race_eth), by="id") |>
    mutate(dad_ed_miss=is.na(dad_educ)) |>
    group_by(race_eth) |>
    summarize(
        N=n(),
        dad_educ_miss = sum(dad_ed_miss)
    )

knitr::kable(dad_ed_miss)
```


```{r}
#| label: fig-dad-educ-shares
#| fig-cap: "Shares of father's educational attainment for the original and imputed data"

plotdf = dad_educ |>
    filter(if_all(everything(), ~!is.na(.) ))

plotdf |>
    group_by(imputation) |>
    mutate(N=n()) |>
    group_by(dad_educ, imputation) |>
    summarise(N=max(N), share=n()/N) |>
    ggplot() +
    geom_col(
        aes(y=share, x=imputation, fill=dad_educ), 
        position = position_stack(reverse = TRUE)
        )
```

```{r}
#| label: fig-dad-educ-shares-by-race
#| fig-cap: "Shares of father's educational attainment for the original and imputed data by race and ethnicity"

plotdf |>
    left_join(select(test, id, race_eth), by="id") |>
    filter(!is.na(race_eth)) |>
    group_by(race_eth, imputation) |>
    mutate(N=n()) |>
    group_by(dad_educ, race_eth, imputation) |>
    summarise(N=max(N), share=n()/N) |>
    ggplot() +
    geom_col(
        aes(y=share, x=imputation, fill=dad_educ),
        position = position_stack(reverse = TRUE)
        ) +
    facet_wrap(~race_eth, nrow=2)

```

## Whisker Plots

```{r}
boxplot(pincome$pincome ~ pincome$imputation)
boxplot(pnetworth$pnetworth ~ pnetworth$imputation)
```

## Scatter Plots for both parent income and wealth (non-imputed is zero)

```{r}
pincome$imputation <- gsub("pincome.", "", pincome$imputation)
pincome$imputation <- ifelse(pincome$imputation == "pincome", 0, pincome$imputation)

pnetworth$imputation <- gsub("pnetworth.", "", pnetworth$imputation)
pnetworth$imputation <- ifelse(pnetworth$imputation == "pnetworth", 0, pnetworth$imputation)

merge <- merge(pincome, pnetworth, by = c("id", "imputation"))

ggplot(merge, aes(x=pincome, y=pnetworth, color = imputation)) +
    geom_point(alpha = 0.5) +
    facet_wrap(~imputation, scales="free")
```
