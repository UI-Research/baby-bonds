---
title: "Baby Bonds: Preliminary Results"
date: "11 July 2024"
author: "Damir Cosic"
format: 
  pptx:
    embed-resources: true
    reference-doc: Urban-Powerpoint-Template.potx
title-slide-attributes: 
    data-background-image: images/urban-institute-logo-1.png
    data-background-size: 25%
    data-background-position: 3% 85%
---

```{r}
library(tidyverse)
library(reldist)
library(urbnthemes)
set_urbn_defaults(style = "print", 
                  base_size=11,
                  base_line_size = 1
                  )

microdf = read_csv("X:/programs/Run1006(babybonds)/BabyBonds/BabyBondsData.csv") |>
    rename_all(tolower)

```

```{r}
#| label: functions

plot_by_scen_sex = function(data, var, var_lab, class1, class1_lab, scale=1, title=NULL)
{
    p = data |> 
        ggplot(aes(x={{class1}}, y={{var}})) +
        geom_col(aes(fill=scenario), position=position_dodge()) +
        facet_wrap(~male) +
        scale_y_continuous(labels=function(x) x*scale) +
        xlab(class1_lab) + ylab(var_lab)
    if(!is.null(title)) {
        p = p + ggtitle(title)
    }
    p = p + 
        scale_fill_manual(values=palette_urbn_main) +
        scale_color_manual(values=c("white", "black")) +
        coord_flip() +
        geom_text(
            aes(label=round({{var}}*scale), color=scenario), 
            position=position_dodge(width=1), 
            hjust=1, 
            show.legend = FALSE
            )
    return(p)
}



recode_raceeth = function(data)
{
    return(data |> mutate(raceeth = case_when(
               raceeth==1 ~ "Black",
               raceeth==2 ~ "Hispanic",
               raceeth==3 ~ "White",
               TRUE ~ "Other"
           )
        )
    )
}

recode_quintile = function(data, var)
{
    return(data |> mutate(
        {{var}} := case_when(
            {{var}}==1 ~ "1st",
            {{var}}==2 ~ "2nd",
            {{var}}==3 ~ "3rd",
            {{var}}==4 ~ "4th",
            {{var}}==5 ~ "5th"
        )
    )
    )
}

recode_scenario = function(data)
{
    return(
        data |> mutate(
            scenario = factor(scenario, ordered=TRUE, labels=c("Baseline", "Baby Bonds"))
        )
    )
}

recode_male = function(data)
{
    return(
        data |> mutate(
            male = factor(male, ordered=TRUE, labels=c("Women", "Men"))
        )
    )
}

recode_degree = function(data)
{
    return(
        data |> mutate(
            degree = factor(
                degree,
                ordered=TRUE,
                labels=c(
                    "Less than high-school",
                    "High-school diploma",
                    "Some college",
                    "College degree",
                    "Graduate degree"
                )
            )
        )
    )
}
```

## Introduction

* The Baby Bonds program starts in 2024
* This analysis observes people born from 2024 to 2028 
* It analyzes the following outcomes:
  * At age 18, the amount of baby bonds
  * At age 45, the share of people with college degree, student loan debt, earnings, and homeownership.
  * At age 65, retirement savings.

## Introduction (continued)

* This analysis disaggregates outcomes along the following dimensions:
  * Sex,
  * Race/ethnicity (Non-Hispanic Black, Hispanic, and Non-Hispanic White), and
  * Quintile of family income at birth.


# Age 18

## Race/Ethnicity Shares by Quintile of Family Income at Birth

```{r}
#| label: fig-pop-by-race-thousands-18
#| fig-cap: "Population by race and ethnicity at 18"

df = microdf |>
    filter(age==18, scenario==0) |>
    select(lhinc0quin, raceeth, weight) |>
    count(lhinc0quin, raceeth, wt=weight) |>
    recode_raceeth() |>
    recode_quintile(lhinc0quin)

df |> group_by(lhinc0quin) |>
    mutate(share = n/sum(n)) |>
    ggplot() +
    geom_col(aes(x=lhinc0quin,y=share,fill=raceeth)) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Quintile of family income at birth") + ylab("Share in race/ethnic category (%)")

```

## Shares of Quintile of Family Income at Birth by Race/Ethnicity 

```{r}
#| label: fig-pop-by-lhincquin-thousands-18
#| fig-cap: "Population by family income quintile at 18"

df |> group_by(raceeth) |>
    mutate(share = n/sum(n)) |>
    ggplot() +
    geom_col(
        aes(x=raceeth,y=share,fill=lhinc0quin), 
        position=position_stack(reverse = TRUE)
        ) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Race/ethnicity") + ylab("Share in  quintile of family income at birth (%)")

```


## Baby Bonds Amount by Quintile of Family Income at Birth and Race/Ethnicity

```{r}
#| label: fig-babybonds-by-race-lhincquin-18
#| fig-cap: "Baby bonds by race/ethnicity and quintile of family income at birth"

df = microdf |>
    filter(age==18, scenario==1) |>
    select(lhinc0quin, raceeth, weight, bbonds) |>
    group_by(raceeth, lhinc0quin) |>
    summarise(bbonds=weighted.mean(bbonds, weight)) |>
    recode_raceeth() |>
    recode_quintile(lhinc0quin)

df |> ggplot() +
    geom_col(aes(x=lhinc0quin, y=bbonds, fill=raceeth), position=position_dodge()) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Quintile of family income at birth") + ylab("Baby bonds (1000s of $2023)")

```

# Age 45

## Share of People with College Degree by Race/Ethnicity

```{r}
#| label: fig-coldeg-share-by-race-45
#| fig-cap: "Share of people with college degree by race/ethnicity"

df = microdf |>
    filter(age==45) |>
    select(raceeth, scenario, weight, ed_coldeg) |>
    group_by(raceeth, scenario) |>
    summarise(ed_coldeg=weighted.mean(ed_coldeg, weight)) |>
    recode_raceeth() |>
    recode_scenario()

names(palette_urbn_main) = NULL

df |> ggplot() +
    geom_col(aes(x=raceeth, y=ed_coldeg, fill=scenario), position=position_dodge()) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Race/ethnicity") + ylab("Share with college degree (%)") +
    scale_fill_manual(values=palette_urbn_main)
    


```

## Share of People with College Degree by Race/Ethnicity and Sex

```{r}
#| label: fig-coldeg-share-by-race-sex-45
#| fig-cap: "Share of people with college degree by race/ethnicity and sex"

df = microdf |>
    filter(age==45) |>
    select(raceeth, male, scenario, weight, ed_coldeg) |>
    group_by(raceeth, male, scenario) |>
    summarise(ed_coldeg=weighted.mean(ed_coldeg, weight)) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=ed_coldeg, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Race/ethnicity") + ylab("Share with college degree (%)") +
    scale_fill_manual(values=palette_urbn_main)
    


```


## Share of People with College Degree by Quintile of Family Income at Birth

```{r}
#| label: fig-coldeg-share-by-lhinc0quin-45
#| fig-cap: "Share of people with college degree by quintile of family income at birth"

df = microdf |>
    filter(age==45) |>
    select(lhinc0quin, scenario, weight, ed_coldeg) |>
    group_by(lhinc0quin, scenario) |>
    summarise(ed_coldeg=weighted.mean(ed_coldeg, weight)) |>
    recode_quintile(lhinc0quin) |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=lhinc0quin, y=ed_coldeg, fill=scenario), position=position_dodge()) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Quintile of family income at birth") + ylab("Share with college degree (%)") +
    scale_fill_manual(values=palette_urbn_main)
    


```



## Share of People with College Degree by Quintile of Family Income at Birth and Sex

```{r}
#| label: fig-coldeg-share-by-lhinc0quin-sex-45
#| fig-cap: "Share of people with college degree by quintile of family income at birth"

df = microdf |>
    filter(age==45) |>
    select(lhinc0quin, male, scenario, weight, ed_coldeg) |>
    group_by(lhinc0quin, male, scenario) |>
    summarise(ed_coldeg=weighted.mean(ed_coldeg, weight)) |>
    ungroup() |>
    recode_quintile(lhinc0quin) |>
    recode_male() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=lhinc0quin, y=ed_coldeg, fill=scenario), position=position_dodge()) +
    scale_y_continuous(labels=function(x) x*100) +
    facet_wrap(~male) +
    xlab("Quintile of family income at birth") + ylab("Share with college degree (%)") +
    scale_fill_manual(values=palette_urbn_main)
    


```


## Share of People who Attended College with Student Loan Debt by Race/Ethnicity and Sex

```{r}
#| label: fig-share-stdebt-by-race-sex-45

df = microdf |>
    filter(age==45, degree>=3) |>
    select(raceeth, male, scenario, weight, studdebt) |>
    mutate(hasdebt=(studdebt>0)) |>
    group_by(raceeth, male, scenario) |>
    summarise(hasdebt=weighted.mean(hasdebt, weight)) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=hasdebt, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Race/ethnicity") + ylab("Share with student loan debt (%)") +
    ggtitle("People age 45 who Attended College") +
    scale_fill_manual(values=palette_urbn_main)
    


```


## Average Student Loan Debt by Race/Ethnicity and Sex

```{r}
#| label: fig-avg-stdebt-by-race-sex-45
#| fig-cap: "Average Student Loan Debt by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45, degree>=3) |>
    select(raceeth, male, scenario, weight, studdebt) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        debtavg = weighted.mean(studdebt, weight),
        debtmed = median(studdebt)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

plot_by_scen_sex(
    df,
    var=debtavg, 
    var_lab="Student loan debt (1000s of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    scale=1e-3,
    title="People age 45 who attended college"
    )
```


## Average Earnings by Race/Ethnicity and Sex

```{r}
#| label: fig-avg-earn-by-race-sex-45
#| fig-cap: "Average Earnings by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45) |>
    select(raceeth, male, scenario, weight, rearn1, rearn2) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        rearn = weighted.mean(rearn1, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()


plot_by_scen_sex(
    df,
    var=rearn, 
    var_lab="Earnings (1000s of $2023)",
    class1=raceeth,
    class1_lab="Race/ethnicity",
    scale=1e-3,
    title="People age 45"
    )

```

```{r}
#| label: fig-avg-earn-by-educ-sex-45
#| fig-cap: "Average Earnings by Education and Sex"

df = microdf |>
    filter(age==45) |>
    select(degree, male, scenario, weight, rearn1, rearn2) |>
    group_by(degree, male, scenario) |>
    summarise(
        rearn = weighted.mean(rearn1, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_degree() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=degree, y=rearn, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Educational attainment") + ylab("Earnings (1000s of $2023)") +
    ggtitle("People age 45") +
    scale_fill_manual(values=palette_urbn_main) +
    coord_flip()
```


## Homeownership by Race/Ethnicity and Sex

```{r}
#| label: fig-homeown-by-race-sex-45
#| fig-cap: "Homeownership by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45) |>
    select(raceeth, male, scenario, weight, ownhome) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        ownhome = weighted.mean(ownhome, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=ownhome, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x*100) +
    xlab("Race/ethnicity") + ylab("Homeownership rate(%)") +
    ggtitle("People age 45") +
    scale_fill_manual(values=palette_urbn_main)
```

## Home Equity by Race/Ethnicity and Sex

```{r}
#| label: fig-homeeq-by-race-sex-45
#| fig-cap: "Home Equity by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==45) |>
    select(raceeth, male, scenario, weight, homeeq) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        homeeq = weighted.mean(homeeq, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=homeeq, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Race/ethnicity") + ylab("Home equity(1000s of $2023)") +
    ggtitle("People age 45") +
    scale_fill_manual(values=palette_urbn_main)
```

# Age 65

## Per-Capita Retirement Savings by Race/Ethnicity

```{r}
#| label: fig-retbal-by-race-sex-45
#| fig-cap: "Retirement Account Balance by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==65) |>
    select(raceeth, male, scenario, weight, retbal) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        retbal = weighted.mean(retbal, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=retbal, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Race/ethnicity") + ylab("Retirement savings (1000s of $2023)") +
    ggtitle("People age 65") +
    scale_fill_manual(values=palette_urbn_main)
```

## Per-Capita Lifetime Earnings Savings by Race/Ethnicity

```{r}
#| label: fig-lifearn-by-race-sex-45
#| fig-cap: "Lifetime Earnings by Race/Ethnicity and Sex"

df = microdf |>
    filter(age==65) |>
    select(raceeth, male, scenario, weight, lifeearn) |>
    group_by(raceeth, male, scenario) |>
    summarise(
        lifeearn = weighted.mean(lifeearn, weight)
        ) |>
    ungroup() |>
    recode_male() |>
    recode_raceeth() |>
    recode_scenario()

df |> ggplot() +
    geom_col(aes(x=raceeth, y=lifeearn, fill=scenario), position=position_dodge()) +
    facet_wrap(~male) +
    scale_y_continuous(labels=function(x) x/1000) +
    xlab("Race/ethnicity") + ylab("Lifetime earnings (1000s of $2023)") +
    ggtitle("People age 65") +
    scale_fill_manual(values=palette_urbn_main)

```

